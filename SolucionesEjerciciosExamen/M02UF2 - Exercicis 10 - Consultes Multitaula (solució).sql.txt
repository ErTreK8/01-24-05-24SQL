create database ddl_ex10ConsultesMultitaules;
use ddl_ex10ConsultesMultitaules;

CREATE TABLE IF NOT EXISTS Clients
(
	DNI CHAR(9),
    nom	varchar(20),
    poblacio varchar(20),
    provincia varchar(20) DEFAULT 'Barcelona',
	dataNaix DATE,
     PRIMARY KEY (dni)
);

CREATE TABLE IF NOT EXISTS Article
(
    codi	char(11),
    nom	varchar(20),
    preu decimal(8,2),
    familia varchar(30) NOT NULL,
     PRIMARY KEY (codi),
	CONSTRAINT verifPreu CHECK (preu>=0 AND preu<=30000)
);

CREATE TABLE IF NOT EXISTS Factura
(
	codi		char(9),
    dataFac		date,
	clientDNI	char(9),
	 PRIMARY KEY (codi),
	CONSTRAINT fk_clients_factura	FOREIGN KEY (clientDNI) REFERENCES clients (DNI)
		ON UPDATE CASCADE ON DELETE RESTRICT

);

CREATE TABLE IF NOT EXISTS Liniafactura
(
	facturacodi	CHAR(9),
	articlecodi	CHAR(11),
    qtt	tinyint,
    
     PRIMARY KEY (facturacodi,articlecodi),
    
    CONSTRAINT fk_factura_Liniafactura
		FOREIGN KEY (facturacodi) REFERENCES Factura (codi)
			ON UPDATE RESTRICT ON DELETE RESTRICT,
	
    CONSTRAINT fk_article_Liniafactura FOREIGN KEY (articlecodi) REFERENCES Article (codi)
		ON UPDATE RESTRICT ON DELETE RESTRICT

);

INSERT INTO Clients VALUES 	('11111111A','Joan Garcia','Mollet','Barcelona', '2001-01-20');
INSERT INTO Clients VALUES 	('22222222B','Maria Maldonado','Granollers','Barcelona','2001-01-12');
INSERT INTO Clients VALUES 	('33333333C','Carles Jiménez','Granollers','Barcelona','2001-02-20');
INSERT INTO Clients VALUES 	('44444444D','Ramon Sanchez','Girona','Girona','2001-06-20');
INSERT INTO Clients VALUES 	('55555555E','Pere Hinojosa','Girona','Girona','2002-02-23'); 
INSERT INTO Clients VALUES 	('66666666F','Blas Garcia','Valencia','Girona','2000-01-20');
                            
INSERT INTO Article VALUES 	('A01','Ratolí',16,'Perifèric/Ratolí'), 
							('A33','Impressora HP',100.84,'Perifèric/Impressora'), 
                            ('A56','Portátil Asus',500.95,'Portàtil/Portàtil'), 
                            ('B32','NVIDIA 1070',354,'Component/Grafica'), 
                            ('G56','Intel I3 6071',164,'Component/Processador'), 
                            ('G57','Intel I5 7091',264,'Component/Processador'), 
                            ('G58','Intel I7 7071',344,'Component/Processador'), 
                            ('D34','RAM 8GB DDR4',46.90,'Component/RAM'),
                            ('S12','RAM 16GB DDR4',84.95,'Component/RAM'),
                            ('J34','Font 500W',46.90,'Component/Font'),
                            ('D32','Font 750W',76.90,'Component/Font'),
                            ('D39','Placa Gigabyte P45',46.90,'Component/PlacaBase'),
                            ('F34','Placa Asus Rock A566',96.40,'Component/PlacaBase'),
                            ('O34','Torre SOE ATX Gaming',46.90,'Component/Torre'),
                            ('Z34','Phoenix ATX 67',76.90,'Component/Torre'),
                            ('Z35','Phoenix ATX 67',36.90,'Component/Torre'),
                            ('Z44','Asus Gaming 23p',156.90,'Pantalla/Monitor'),
                            ('Z54','LG Pro 21p',142.50,'Pantalla/Monitor'),
                            ('Z64','Teclat Logitech G120',45.90,'Periféric/Teclat'),
                            ('Z74','Teclat Logitech K70',86.90,'Periféric/Teclat');
                            
INSERT INTO Factura VALUES	('006746/20','2016-02-05','11111111A'), 
							('000001/20','2016-12-05','11111111A'), 
                            ('000002/21','2018-10-05','33333333C'), 
                            ('000003/21','2018-11-05','22222222B'), 
                            ('000004/19','2019-07-05','44444444D'),
                            ('000005/21','2018-01-01','33333333C');                             
INSERT INTO Liniafactura VALUES 
							('006746/20','Z54',10),('006746/20','Z35',5),
							('000001/20','Z35',2),('000001/20','F34',5),
							('000002/21','Z54',3),('000002/21','Z44',5),
							('000003/21','Z74',3),
							('000004/19','D39',3),('000004/19','F34',3),
                            ('000005/21','D39',2),('000005/21','Z64',3);


-- **************************** CONSULTES **********************************


-- 1.Obtenir quantes factures hi ha hagut per província i per població. 
-- En cas que hi hagin províncies  que no hagin tingut factures, cal que es mostri un 0. 
SELECT C.provincia, C.poblacio, COUNT(F.codi) AS TotalFactures FROM Clients C
	LEFT JOIN Factura F ON C.DNI = F.clientDNI
GROUP BY C.provincia, C.poblacio;

SELECT C.provincia, C.poblacio, COUNT(F.codi) AS TotalFactures FROM Factura F 
	RIGHT JOIN Clients C ON C.DNI = F.clientDNI
GROUP BY C.provincia, C.poblacio;

-- 2. Obtenir el numero total de factures que té cada client  
-- amb el DNI i una altra columna amb el Nom i Cognom 

SELECT c.DNI, c.nom, COUNT(f.codi) AS num_invoices FROM Clients c
LEFT JOIN Factura f ON c.DNI = f.clientDNI
GROUP BY c.DNI;

-- 2B. Mostra el nom d'aquells clients que no son de Granollers, ni del Sant Celoni
-- que ténen les mateixes factures acumulades que aquells que son de Girona.

SELECT DISTINCT COUNT(f.codi) AS num_invoices FROM Clients c
LEFT JOIN Factura f ON c.DNI = f.clientDNI
WHERE C.poblacio = 'Girona'
GROUP BY c.DNI;

SELECT c.DNI, c.nom, COUNT(f.codi) AS num_invoices FROM Clients c
LEFT JOIN Factura f ON c.DNI = f.clientDNI
WHERE C.poblacio NOT IN ('Sant Celoni','Granollers')
GROUP BY c.DNI
HAVING num_invoices IN (SELECT DISTINCT COUNT(f.codi) AS num_invoices FROM Clients c
						LEFT JOIN Factura f ON c.DNI = f.clientDNI
						WHERE C.poblacio = 'Girona'
						GROUP BY c.DNI);


-- 3. Obtenir el numero total de factures per a tots els clients que viuen a Barcelona. 
SELECT COUNT(f.codi) AS num_invoices FROM Clients c
INNER JOIN Factura f ON c.DNI = f.clientDNI
WHERE C.provincia = 'Barcelona';


-- 4. Obtenir el numero total de factures trameses en cada una de les ciutats de província catalanes. 
SELECT C.provincia, COUNT(f.codi) AS num_invoices FROM Clients c
INNER JOIN Factura f ON c.DNI = f.clientDNI
WHERE C.provincia IN ('Barcelona','Lleida','Tarragona','Girona')
GROUP BY C.provincia;


-- 5. Realitzar un llistat de tots els articles de la família «sobretaula» 
-- que el seu nom comenci per la lletra «o» amb un preu unitari superior a 400€. 
SELECT  * FROM article
WHERE  FAMILIA = 'sobretaula'
AND nom like 'o%'
AND preu>400;

-- 5B. Mostra el nom del producte més car.


SELECT nom, preu FROM Article 
WHERE preu = (SELECT MAX(preu) FROM Article);

-- 5c. Mostra el nom de l''article més venut.
CREATE OR REPLACE VIEW qttArticlesVenuts AS
SELECT articleCodi, SUM(qtt) as Total FROM LiniaFactura
GROUP BY articleCodi;

SELECT MAX(total) FROM qttArticlesVenuts;

SELECT A.codi, A.nom, total FROM qttArticlesVenuts V 
	INNER JOIN Article A ON V.articleCodi = A.codi 
WHERE total = (SELECT MAX(total) FROM qttArticlesVenuts);

-- Sense ús de vista
select a.codi from liniafactura l
    inner join article a on l.articlecodi = a.codi
group by a.codi
having sum(l.qtt)= (select max(Suma) from (
								select sum(l.qtt) as Suma from liniafactura l
								group by l.articlecodi
								) SubSelect
					);

-- 6. Obtenir el nom dels articles que són més cars que els 
-- articles de les famílies Component/Processador 

SELECT MAX(preu) FROM Article WHERE familia = 'Component/Processador';

SELECT nom, preu FROM Article
	WHERE preu > (SELECT MAX(preu) FROM Article WHERE familia = 'Component/Processador');
    
    
-- 7. Obtenir el codi de l'article, el nom de l'article
--  i la quantitat comprada per a cada una de les línies de factura. 

SELECT A.codi, A.nom, L.qtt FROM LiniaFactura L
	INNER JOIN Article A ON A.codi = L.articleCodi
ORDER BY l.facturaCodi;

-- 8. Obtenir l'import total facturat amb totes les factures 

SELECT SUM(A.preu*L.qtt) AS Total FROM LiniaFactura L
	INNER JOIN Article A ON A.codi = L.articleCodi;
    
-- 8b:Obtenir l'import total facturat per factura
SELECT L.facturaCodi, SUM(A.preu*L.qtt) AS Total FROM LiniaFactura L
	INNER JOIN Article A ON A.codi = L.articleCodi
GROUP BY L.facturaCodi;
 
-- 9. Obtenir l'import facturat per a cada una de les famílies d'articles. 
SELECT A.familia, IFNULL(SUM(A.preu*L.qtt),0) AS Total FROM Article A
	LEFT JOIN LiniaFactura L ON A.codi = L.articleCodi
GROUP BY A.familia;

-- 10. Obtenir la informació de tots els articles i la seva quantitat venuda. 
-- Obtindrem el valor NULL o 0 (zero) en el cas que el producte no hagi tingut cap venda. 
SELECT A.*, IFNULL(SUM(LF.qtt),0) AS QuantitatVenuda FROM Article A
    LEFT JOIN liniaFactura LF ON A.codi = LF.articleCodi
GROUP BY A.Codi;

-- 11. Obtenir l'import total de la factura 006746/20. 
CREATE OR REPLACE VIEW TotalPerFactura AS
SELECT L.facturaCodi, SUM(A.preu*L.qtt) AS Total FROM LiniaFactura L
	INNER JOIN Article A ON A.codi = L.articleCodi
GROUP BY L.facturaCodi;
 
SELECT * FROM  TotalPerFactura
	WHERE facturaCodi = '006746/20';



CREATE OR REPLACE VIEW LlistatFacturesClient AS
SELECT C.*, F.*, L.*, A.codi AS codiArticle,A.nom AS ArticleNom,A.preu,A.familia FROM Clients C
	LEFT JOIN Factura F ON C.DNI = F.clientDNI
    LEFT JOIN LiniaFactura L ON F.codi = L.facturaCodi
    INNER JOIN Article A ON A.codi = L.articleCodi
ORDER BY C.DNI;

SELECT * FROM LlistatFacturesClient;
-- 12. Obtenir l'import facturat per a cada un dels clients que siguin de la 
-- ciutat de Girona. Cal ordenar el resultat de major a menor import.

SELECT llistat.nom, SUM(llistat.qtt*llistat.preu) AS ImportFactura 
	FROM LlistatFacturesClient llistat
WHERE llistat.provincia = 'Girona'
GROUP BY llistat.DNI;

-- 13. Obtenir el codi i la data de totes les factures amb un import superior 
-- al de la factura 000004/19.


SELECT codi, dataFac, SUM(preu*qtt) AS ImportPerFactura FROM LlistatFacturesClient
GROUP BY codi
HAVING ImportPerFactura > (SELECT SUM(preu*qtt) FROM LlistatFacturesClient
							WHERE codi = '000004/19');


-- 14. Obtenir un llistat amb: totes les dades del client, 
-- totes les dades de les seves factures, i els seus
-- productes adquirits.
SELECT dni,nom,poblacio,provincia,dataNaix,codi,dataFac,ArticleNom,qtt from LlistatFacturesClient;

-- 15. Obtenir el total facturat per any i mes  durant l'any 2018 i 2021. 
-- Ordenar el resultat per any i mes de forma descendent l’import.
SELECT YEAR(dataFac) AS 'Any', MONTHNAME(dataFac)  AS Mes, SUM(qtt*preu) AS totalFacturat FROM llistatFacturesClient
WHERE YEAR(dataFac) BETWEEN 2018 AND 2021
GROUP BY YEAR(dataFac), Mes
ORDER BY totalFacturat DESC;

-- 16. Obtenir quines factures tenen una facturació tenen major a l'import mitjà de la facturació de la
-- població de «Granollers».
select * from LlistatFacturesClient;
-- Primer busquem un llistat del total per factura, només de Granollers.
CREATE VIEW facturesGranollers AS
SELECT  codi ,SUM(preu*qtt) AS ImportPerFactura FROM LlistatFacturesClient
WHERE poblacio = 'Granollers'
GROUP  BY codi;

-- A partir del llistat anterior, cerquem quina és la mitja de les Factures
SELECT AVG(ImportPerFactura) from facturesGranollers;

-- Creem un llistat de l'import per factura i filtrem pel llistat anterior.
SELECT  codi ,SUM(preu*qtt) AS ImportPerFactura FROM LlistatFacturesClient
GROUP  BY codi
HAVING ImportPerFactura>(SELECT AVG(ImportPerFactura) from facturesGranollers);


-- 17. Obtenir tots els articles dels quals no s'hagi venut cap unitat.
SELECT A.nom FROM Article A
	LEFT JOIN LiniaFactura L ON A.codi = L.articleCodi
WHERE L.articleCodi IS NULL;

-- 18. Obtenir el dni i el nom de tots els clients que no tinguin 
-- cap factura no es vol tenir en compte els que son de la província Barcelona.
SELECT C.DNI, C.nom FROM Clients C
	LEFT JOIN Factura F ON C.DNI = F.clientDNI
WHERE C.provincia != 'Barcelona' AND F.clientDNI IS NULL;

-- 19. Digues el DNI i el nom del client que ha fet la factura més cara.

-- SENSE VISTA:
SELECT C.DNI, C.nom FROM Clients C
    LEFT JOIN Factura F ON C.DNI=F.clientDnI
WHERE F.dataFac IS NULL AND provincia NOT LIKE 'Barcelona';
SELECT C.DNI,C.nom FROM Clients C
    INNER JOIN Factura F ON C.DNI=F.clientDNI
    INNER JOIN liniaFactura l ON F.codi=l.facturaCodi
    INNER JOIN article A ON A.codi=l.articleCodi
GROUP BY F.codi
HAVING SUM(A.preul.qtt) = (SELECT SUM(A.preul.qtt) AS FacturaMesCara FROM Factura F
                                    INNER JOIN liniafactura l ON F.codi=l.facturaCodi
                                    INNER JOIN Article A ON A.codi=l.articleCodi
                            GROUP BY F.codi
                            ORDER BY FacturaMesCara DESC
                            LIMIT 1);

-- AMB VISTA
SELECT * FROM totalPerFactura
WHERE total = (SELECT MAX(total) FROM totalPerFactura);

-- 20. Mostra els nom dels clients que han comprat més articles 
-- que en la suma del total d’articles que
-- han comprat els clients amb cognom Garcia.


SELECT nom, SUM(qtt) AS Total FROM llistatfacturesclient
GROUP BY dni
HAVING Total > (SELECT SUM(qtt) FROM llistatfacturesclient
					WHERE nom LIKE '%garcia%');


-- 21. A partir d’ara es vol tenir el control de la categoria el qual pertany un article. De la categoria es
-- vol emmagatzemar, el nom de la categoria, si aquesta categoria té data de caducitat i el tipus de
-- risc que va entre 1 y 10 (per defecte és 5). Realitza les instruccions necessàries per tal de poder
-- resoldre aquest nou requeriment

CREATE TABLE IF NOT EXISTS Categoria(
    nom VARCHAR(30) PRIMARY KEY,
    dataCaducitat DATE,
    risc TINYINT DEFAULT 5,
    CONSTRAINT verifRisc CHECK (risc BETWEEN 1 AND 10)
);

ALTER TABLE Article ADD  COLUMN categoriaNom VARCHAR(30);
ALTER TABLE Article ADD CONSTRAINT fk_article_categoria FOREIGN KEY(categoriaNom)
	REFERENCES Categoria(nom)
    ON UPDATE CASCADE ON DELETE RESTRICT;

-- *********************************************************
-- EXEMPLES D'US DE VISTES FORA DEL EXERCICI
-- *********************************************************

-- Exemple ús d'una vista:
CREATE OR REPLACE VIEW qttFacturesPerClient AS
SELECT DISTINCT C.dni, c.nom, C.poblacio, COUNT(f.codi) AS num_invoices FROM Clients c
LEFT JOIN Factura f ON c.DNI = f.clientDNI
GROUP BY c.DNI;

SELECT * FROM qttFacturesPerClient
WHERE num_invoices = 2;


CREATE VIEW dadesClientsBasiques AS
SELECT nom, poblacio, provincia FROM Clients;

select * from clients;
select * from Article;

-- Crear una visa que no permeti introduir articles de menys de 10€
CREATE OR REPLACE VIEW articlesMajors10e AS
	SELECT codi, nom, preu, familia FROM Article
		WHERE preu >=10
	WITH CHECK OPTION;

SELECT * FROM articlesMajors10e;
INSERT INTO articlesMajors10e VALUES ('W10','Cable VGA',15,'Component/Cables');
SELECT codi FROM Article where codi = 'w10';
SELECT COUNT(*) FROM Article;
